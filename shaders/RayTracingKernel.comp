#version 460 core

layout(local_size_x = 8, local_size_y = 4, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D screen;


void main()
{
	vec4 pixel = vec4(0.075, 0.133, 0.173, 1.0);
	ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);

	ivec2 dims = imageSize(screen);
	float x = -(float(pixel_coords.x * 2 - dims.x) / dims.x); // [-1.0, 1.0]
	float y = -(float(pixel_coords.y * 2 - dims.y) / dims.y); // [-1.0, 1.0]

	float fov = 90.0;
	vec3 CameraOrigin = vec3(0.0,0.0, -tan(fov/2.0));
	vec3 RayOrigin = vec3(x, y, 0.0);
	vec3 RayDirection = normalize(RayOrigin - CameraOrigin);

	vec3 SphereCenter = vec3(0.0, 0.0, -5.0);
	float SphereRadius = 1.0;

	vec3 o_c = RayOrigin - SphereCenter;
	float b = dot(RayDirection, o_c);
	float c = dot(o_c, o_c) - SphereRadius * SphereRadius;
	float intersectionState = b * b - c;
	vec3 intersection = RayOrigin + RayDirection * (-b + sqrt(b * b - c));

	if(intersectionState >= 0)
	{
		pixel = vec4((normalize(intersection - SphereCenter) + 1.0) / 2.0, 1.0);
	}

	imageStore(screen, pixel_coords, pixel);
}